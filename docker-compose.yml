version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: credit-dispute-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-credit_dispute}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - credit-dispute-network

  redis:
    image: redis:7-alpine
    container_name: credit-dispute-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - credit-dispute-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: credit-dispute-backend
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-credit_dispute}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-super-secret-jwt-key}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-super-secret-refresh-key}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      NODE_ENV: development
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - credit-dispute-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: credit-dispute-frontend
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:${BACKEND_PORT:-3001}
      NEXT_PUBLIC_WS_URL: ws://localhost:${BACKEND_PORT:-3001}
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - credit-dispute-network

volumes:
  postgres_data:
  redis_data:

networks:
  credit-dispute-network:
    driver: bridge